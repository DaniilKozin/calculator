#!/usr/bin/env python3
"""
–§–ò–ù–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ü–†–ê–í–ò–õ–¨–ù–´–• –§–û–†–ú–£–õ
–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø—É–ª–∞: 50,000 ZNX √ó $1.00 = $50,000
–ò –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π GGR multiplier = 3.0 (target_ggr_multiplier –∏–∑ –∫–æ–¥–∞)
"""

import pandas as pd
import numpy as np

def load_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ"""
    daily_df = pd.read_csv('pool1_nov2025_daily.csv')
    monthly_df = pd.read_csv('pool1_nov2025_monthly.csv')
    tiers_df = pd.read_csv('pool1_nov2025_monthly_tiers_znx.csv')
    
    return daily_df, monthly_df, tiers_df

def analyze_correct_pool_structure():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—É–ª–∞ –∏–∑ –¥–∞—à–±–æ—Ä–¥–∞"""
    print("=== –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –ü–£–õ–ê ===")
    
    # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –¥–∞—à–±–æ—Ä–¥–∞
    total_znx = 50000.0  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö ZNX
    znx_rate = 1.0       # –ö—É—Ä—Å ZNX –∫ USD
    total_usd = total_znx * znx_rate
    target_ggr_multiplier = 3.0  # –ò–∑ –∫–æ–¥–∞ revshare_pool.py
    
    print(f"–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –ø—É–ª–∞: {total_znx:,.0f} ZNX √ó ${znx_rate:.2f} = ${total_usd:,.2f}")
    print(f"Target GGR multiplier: {target_ggr_multiplier:.1f}x")
    
    return total_znx, znx_rate, total_usd, target_ggr_multiplier

def verify_tier_formulas_with_target_ggr(target_ggr):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º—É–ª—ã —Ç–∏—Ä–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º GGR multiplier"""
    print("\n=== –ü–†–û–í–ï–†–ö–ê –§–û–†–ú–£–õ –¢–ò–†–û–í –° TARGET GGR ===")
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–æ–¥–∞ –¥–∞—à–±–æ—Ä–¥–∞
    stable_rates = {
        'basic': 0.34,      # 34%
        'advanced': 0.3825, # 38.25%
        'premium': 0.425    # 42.5%
    }
    
    growth_rates = {
        'basic': 0.085,     # 8.5%
        'advanced': 0.10625, # 10.625%
        'premium': 0.1275   # 12.75%
    }
    
    print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—É–ª —Å GGR multiplier = {target_ggr:.1f}x:")
    print(f"")
    print(f"STABLE POOL (—Ñ–æ—Ä–º—É–ª–∞: invested_amount √ó {target_ggr:.1f} √ó rate):")
    for tier, rate in stable_rates.items():
        per_dollar = target_ggr * rate
        print(f"  {tier.capitalize()}: per_dollar = {target_ggr:.1f} √ó {rate:.3%} = ${per_dollar:.3f}")
    
    print(f"")
    print(f"GROWTH POOL (—Ñ–æ—Ä–º—É–ª–∞: cash = invested_amount √ó {target_ggr:.1f} √ó rate + tokens returned):")
    for tier, rate in growth_rates.items():
        cash_per_dollar = target_ggr * rate
        total_per_dollar = cash_per_dollar + 1.0  # + 100% tokens returned
        print(f"  {tier.capitalize()}: cash_per_dollar = {target_ggr:.1f} √ó {rate:.3%} = ${cash_per_dollar:.3f}")
        print(f"    total_per_dollar = ${cash_per_dollar:.3f} + $1.00 = ${total_per_dollar:.3f}")
    
    return stable_rates, growth_rates

def calculate_example_payouts(target_ggr, stable_rates, growth_rates):
    """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–ª–∞—Ç –∫–∞–∫ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print(f"\n=== –ü–†–ò–ú–ï–†–´ –í–´–ü–õ–ê–¢ (GGR = {target_ggr:.2f}x) ===")
    
    print(f"STABLE POOL –ø—Ä–∏–º–µ—Ä—ã:")
    
    # Basic Tier example
    invested = 10500
    rate = stable_rates['basic']
    received = invested * target_ggr * rate
    per_dollar = target_ggr * rate
    print(f"  Basic: ${invested:,.0f} invested, {target_ggr:.2f}x GGR")
    print(f"    received = ${invested:,.0f} √ó {target_ggr:.2f} √ó {rate:.2%} = ${received:,.0f}")
    print(f"    per_dollar = {target_ggr:.2f} √ó {rate:.2%} = ${per_dollar:.2f}")
    
    # Advanced Tier example
    invested = 6300
    rate = stable_rates['advanced']
    received = invested * target_ggr * rate
    per_dollar = target_ggr * rate
    print(f"  Advanced: ${invested:,.0f} invested, {target_ggr:.2f}x GGR")
    print(f"    received = ${invested:,.0f} √ó {target_ggr:.2f} √ó {rate:.4%} = ${received:,.0f}")
    print(f"    per_dollar = {target_ggr:.2f} √ó {rate:.4%} = ${per_dollar:.2f}")
    
    # Premium Tier example
    invested = 4200
    rate = stable_rates['premium']
    received = invested * target_ggr * rate
    per_dollar = target_ggr * rate
    print(f"  Premium: ${invested:,.0f} invested, {target_ggr:.2f}x GGR")
    print(f"    received = ${invested:,.0f} √ó {target_ggr:.2f} √ó {rate:.1%} = ${received:,.0f}")
    print(f"    per_dollar = {target_ggr:.2f} √ó {rate:.1%} = ${per_dollar:.2f}")
    
    print(f"\nGROWTH POOL –ø—Ä–∏–º–µ—Ä—ã (100% tokens returned):")
    
    # Basic Tier example
    invested = 7000
    rate = growth_rates['basic']
    cash_received = invested * target_ggr * rate
    tokens_returned = invested
    total_value = cash_received + tokens_returned
    per_dollar = (target_ggr * rate) + 1.0
    print(f"  Basic: ${invested:,.0f} invested, {target_ggr:.2f}x GGR")
    print(f"    cash = ${invested:,.0f} √ó {target_ggr:.2f} √ó {rate:.1%} = ${cash_received:,.0f}")
    print(f"    tokens = ${invested:,.0f}")
    print(f"    total = ${total_value:,.0f}")
    print(f"    per_dollar = ({target_ggr:.2f} √ó {rate:.1%}) + 1.00 = ${per_dollar:.2f}")
    
    # Advanced Tier example
    invested = 4200
    rate = growth_rates['advanced']
    cash_received = invested * target_ggr * rate
    tokens_returned = invested
    total_value = cash_received + tokens_returned
    per_dollar = (target_ggr * rate) + 1.0
    print(f"  Advanced: ${invested:,.0f} invested, {target_ggr:.2f}x GGR")
    print(f"    cash = ${invested:,.0f} √ó {target_ggr:.2f} √ó {rate:.3%} = ${cash_received:,.0f}")
    print(f"    tokens = ${invested:,.0f}")
    print(f"    total = ${total_value:,.0f}")
    print(f"    per_dollar = ({target_ggr:.2f} √ó {rate:.3%}) + 1.00 = ${per_dollar:.2f}")
    
    # Premium Tier example
    invested = 2800
    rate = growth_rates['premium']
    cash_received = invested * target_ggr * rate
    tokens_returned = invested
    total_value = cash_received + tokens_returned
    per_dollar = (target_ggr * rate) + 1.0
    print(f"  Premium: ${invested:,.0f} invested, {target_ggr:.2f}x GGR")
    print(f"    cash = ${invested:,.0f} √ó {target_ggr:.2f} √ó {rate:.2%} = ${cash_received:,.0f}")
    print(f"    tokens = ${invested:,.0f}")
    print(f"    total = ${total_value:,.0f}")
    print(f"    per_dollar = ({target_ggr:.2f} √ó {rate:.2%}) + 1.00 = ${per_dollar:.2f}")

def calculate_correct_collected(total_znx, znx_rate):
    """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ '–°–æ–±—Ä–∞–Ω–æ'"""
    print(f"\n=== –ü–†–ê–í–ò–õ–¨–ù–û–ï –ó–ù–ê–ß–ï–ù–ò–ï '–°–û–ë–†–ê–ù–û' ===")
    
    collected = total_znx * znx_rate
    
    print(f"–°–û–ë–†–ê–ù–û = {total_znx:,.0f} ZNX √ó ${znx_rate:.2f} = ${collected:,.2f}")
    print(f"‚úÖ –§–æ—Ä–º—É–ª–∞: ZNX_amount √ó ZNX_rate")
    print(f"‚úÖ –≠—Ç–æ —Å—É–º–º–∞ –æ–±–æ–∏—Ö –ø—É–ª–æ–≤ –≤ ZNX √ó –∫—É—Ä—Å ZNX")
    
    return collected

def calculate_correct_paid_out(monthly_df):
    """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ '–í—ã–ø–ª–∞—á–µ–Ω–æ'"""
    print(f"\n=== –ü–†–ê–í–ò–õ–¨–ù–û–ï –ó–ù–ê–ß–ï–ù–ò–ï '–í–´–ü–õ–ê–ß–ï–ù–û' ===")
    
    # –°—É–º–º–∏—Ä—É–µ–º –≤—Å–µ –≤—ã–ø–ª–∞—Ç—ã
    total_stable = monthly_df['stable_payout'].sum()
    total_growth = monthly_df['growth_payout'].sum()
    total_referral = monthly_df['monthly_referral_cost'].sum()
    
    total_paid = total_stable + total_growth + total_referral
    
    print(f"Stable Pool –≤—ã–ø–ª–∞—Ç—ã: ${total_stable:,.2f}")
    print(f"Growth Pool –≤—ã–ø–ª–∞—Ç—ã: ${total_growth:,.2f}")
    print(f"–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã: ${total_referral:,.2f}")
    print(f"–í–´–ü–õ–ê–ß–ï–ù–û = ${total_paid:,.2f}")
    print(f"‚úÖ –§–æ—Ä–º—É–ª–∞: stable_payout + growth_payout + referral_cost")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–ø–ª–∞—Ç—ã –ø–æ –º–µ—Å—è—Ü–∞–º —Å high watermark
    print(f"\n–í—ã–ø–ª–∞—Ç—ã –ø–æ –º–µ—Å—è—Ü–∞–º (high watermark –ø—Ä–∏–Ω—Ü–∏–ø):")
    for _, row in monthly_df.iterrows():
        if row['stable_payout'] > 0 or row['growth_payout'] > 0:
            watermark = "‚úÖ High Watermark" if row['watermark_exceeded'] else "‚ùå No Watermark"
            print(f"  {int(row['year'])}-{int(row['month']):02d}: "
                  f"Stable ${row['stable_payout']:,.2f}, "
                  f"Growth ${row['growth_payout']:,.2f}, "
                  f"{watermark}")
    
    return total_paid, total_stable, total_growth, total_referral

def compare_dashboard_vs_correct(collected, paid_out):
    """–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏"""
    print(f"\n=== –°–†–ê–í–ù–ï–ù–ò–ï –î–ê–®–ë–û–†–î–ê –° –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –ó–ù–ê–ß–ï–ù–ò–Ø–ú–ò ===")
    
    # –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –¥–∞—à–±–æ—Ä–¥–∞
    dashboard_collected = 28390  # final_ggr / ggr_multiplier
    dashboard_paid = 22233      # –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞
    dashboard_cost = 78.3       # –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    correct_cost = (paid_out / collected) * 100
    profit_loss = paid_out - collected
    roi = (profit_loss / collected) * 100
    
    print("–¢–ï–ö–£–©–ò–ô –î–ê–®–ë–û–†–î (‚ùå –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ) vs –ü–†–ê–í–ò–õ–¨–ù–´–ï –ó–ù–ê–ß–ï–ù–ò–Ø (‚úÖ):")
    print(f"")
    print(f"–°–û–ë–†–ê–ù–û:")
    print(f"  ‚ùå –î–∞—à–±–æ—Ä–¥: ${dashboard_collected:,.0f} (—Ñ–æ—Ä–º—É–ª–∞: final_ggr / ggr_multiplier)")
    print(f"  ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: ${collected:,.0f} (—Ñ–æ—Ä–º—É–ª–∞: ZNX_amount √ó ZNX_rate)")
    print(f"  üìù –†–∞–∑–Ω–∏—Ü–∞: ${collected - dashboard_collected:,.0f}")
    print(f"")
    print(f"–í–´–ü–õ–ê–ß–ï–ù–û:")
    print(f"  ‚ùå –î–∞—à–±–æ—Ä–¥: ${dashboard_paid:,.0f} (–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞)")
    print(f"  ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: ${paid_out:,.2f} (—Ñ–æ—Ä–º—É–ª–∞: stable + growth + referral)")
    print(f"  üìù –†–∞–∑–Ω–∏—Ü–∞: ${paid_out - dashboard_paid:,.2f}")
    print(f"")
    print(f"–°–¢–û–ò–ú–û–°–¢–¨ –ö–ê–ü–ò–¢–ê–õ–ê:")
    print(f"  ‚ùå –î–∞—à–±–æ—Ä–¥: {dashboard_cost:.1f}% (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å)")
    print(f"  ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_cost:.1f}% (—Ñ–æ—Ä–º—É–ª–∞: –≤—ã–ø–ª–∞—á–µ–Ω–æ / —Å–æ–±—Ä–∞–Ω–æ √ó 100)")
    print(f"  üìù –†–∞–∑–Ω–∏—Ü–∞: {correct_cost - dashboard_cost:.1f}%")
    print(f"")
    print(f"–ü–†–ò–ë–´–õ–¨/–£–ë–´–¢–û–ö:")
    print(f"  ‚ùå –î–∞—à–±–æ—Ä–¥: –Ω–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è")
    print(f"  ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: ${profit_loss:,.2f} (—Ñ–æ—Ä–º—É–ª–∞: –≤—ã–ø–ª–∞—á–µ–Ω–æ - —Å–æ–±—Ä–∞–Ω–æ)")
    print(f"")
    print(f"ROI:")
    print(f"  ‚ùå –î–∞—à–±–æ—Ä–¥: –Ω–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è")
    print(f"  ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {roi:.1f}% (—Ñ–æ—Ä–º—É–ª–∞: –ø—Ä–∏–±—ã–ª—å / —Å–æ–±—Ä–∞–Ω–æ √ó 100)")
    
    return correct_cost, profit_loss, roi

def write_final_recommendations():
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"""
    print(f"\n" + "="*80)
    print("–§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –î–ê–®–ë–û–†–î–ê")
    print("="*80)
    
    print(f"\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –í –ö–û–î–ï –î–ê–®–ë–û–†–î–ê:")
    print(f"")
    print(f"1. –°–û–ë–†–ê–ù–û (Collected):")
    print(f"   ‚ùå –£–±—Ä–∞—Ç—å: final_ggr / ggr_multiplier")
    print(f"   ‚úÖ –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞: znx_amount * znx_rate")
    print(f"   üìù –≠—Ç–æ —Å—É–º–º–∞ –æ–±–æ–∏—Ö –ø—É–ª–æ–≤ –≤ ZNX √ó –∫—É—Ä—Å ZNX")
    print(f"")
    print(f"2. –í–´–ü–õ–ê–ß–ï–ù–û (Paid Out):")
    print(f"   ‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: monthly_df['stable_payout'].sum() + monthly_df['growth_payout'].sum() + monthly_df['monthly_referral_cost'].sum()")
    print(f"   üìù –° —É—á–µ—Ç–æ–º high watermark –ø—Ä–∏–Ω—Ü–∏–ø–∞ –∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –≤—ã–ø–ª–∞—Ç")
    print(f"")
    print(f"3. –°–¢–û–ò–ú–û–°–¢–¨ –ö–ê–ü–ò–¢–ê–õ–ê (Cost of Capital):")
    print(f"   ‚úÖ –§–æ—Ä–º—É–ª–∞: (–≤—ã–ø–ª–∞—á–µ–Ω–æ / —Å–æ–±—Ä–∞–Ω–æ) √ó 100")
    print(f"   üìù –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å - —ç—Ç–æ —Å–æ–±—Ä–∞–Ω–æ, –∞ –Ω–µ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ")
    print(f"")
    print(f"4. –ü–†–ò–ë–´–õ–¨/–£–ë–´–¢–û–ö (Profit/Loss):")
    print(f"   ‚úÖ –î–æ–±–∞–≤–∏—Ç—å: –≤—ã–ø–ª–∞—á–µ–Ω–æ - —Å–æ–±—Ä–∞–Ω–æ")
    print(f"")
    print(f"5. ROI:")
    print(f"   ‚úÖ –î–æ–±–∞–≤–∏—Ç—å: (–ø—Ä–∏–±—ã–ª—å / —Å–æ–±—Ä–∞–Ω–æ) √ó 100")
    
    print(f"\nüìä –ü–†–û–í–ï–†–ö–ê –§–û–†–ú–£–õ –¢–ò–†–û–í:")
    print(f"‚úÖ Stable Pool: 34%, 38.25%, 42.5% - –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–û")
    print(f"‚úÖ Growth Pool: 8.5%, 10.625%, 12.75% - –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–û")
    print(f"‚úÖ High Watermark –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print(f"‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è")
    print(f"‚úÖ Target GGR multiplier = 3.0x –∏–∑ –∫–æ–¥–∞")
    
    print(f"\nüéØ –ö–õ–Æ–ß–ï–í–´–ï –í–´–í–û–î–´:")
    print(f"‚Ä¢ –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞ –¥–ª—è '–°–æ–±—Ä–∞–Ω–æ'")
    print(f"‚Ä¢ –†–∞–∑–º–µ—Ä –ø—É–ª–∞: 50,000 ZNX √ó $1.00 = $50,000 (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)")
    print(f"‚Ä¢ –í—ã–ø–ª–∞—Ç—ã —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å —É—á–µ—Ç–æ–º high watermark")
    print(f"‚Ä¢ –§–æ—Ä–º—É–ª—ã —Ç–∏—Ä–æ–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∑–∞—è–≤–ª–µ–Ω–Ω—ã–º –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º")
    print(f"‚Ä¢ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–±–æ—Ç–∞—é—Ç —Å GGR = 3.0x")
    
    print("="*80)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("–§–ò–ù–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ü–†–ê–í–ò–õ–¨–ù–´–• –§–û–†–ú–£–õ –î–ê–®–ë–û–†–î–ê")
    print("="*80)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    daily_df, monthly_df, tiers_df = load_data()
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—É–ª–∞
    total_znx, znx_rate, total_usd, target_ggr = analyze_correct_pool_structure()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º—É–ª—ã —Ç–∏—Ä–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º GGR
    stable_rates, growth_rates = verify_tier_formulas_with_target_ggr(target_ggr)
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–ª–∞—Ç
    calculate_example_payouts(target_ggr, stable_rates, growth_rates)
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    collected = calculate_correct_collected(total_znx, znx_rate)
    paid_out, stable_total, growth_total, referral_total = calculate_correct_paid_out(monthly_df)
    
    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –¥–∞—à–±–æ—Ä–¥–æ–º
    cost_of_capital, profit_loss, roi = compare_dashboard_vs_correct(collected, paid_out)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    write_final_recommendations()

if __name__ == "__main__":
    main()